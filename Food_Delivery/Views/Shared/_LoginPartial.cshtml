@using Microsoft.AspNetCore.Identity
@using Food_Delivery.Models
@using Food_Delivery.Helpers
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), Role.Customer))
{
    @*<li><a asp-area="Identity" asp-page="/Account/Manage/Index" class="cart-ico">LogIn </a> | <a asp-area="Identity" asp-page="/Account/Register" class="cart-ico">Register </a></li>
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>*@
    <li><a asp-area="Identity" asp-page="/Account/Manage/Index" class="cart-ico"><TEXT>@(await UserManager.GetUserAsync(User))</TEXT> </a> | <a asp-action="LogOut" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="cart-ico" >Logout</a></li>
}
else
{
    <li><a asp-area="Identity" asp-page="/Account/Login" class="cart-ico">LogIn </a> | <a asp-area="Identity" asp-page="/Account/Register" class="cart-ico">Register </a></li>

}
